Perfetto RobS. Ecco le **istruzioni ufficiali per C22**, basate sul **report di C23** che hai incollato, con le priorità chiare e le azioni da svolgere punto per punto.

---

## 📄 ISTRUZIONI PER C22

**Titolo:** Correzione errori strutturali nel progetto TouristIQ (report C23)
**Data:** 2025-07-03
**Responsabile:** Geppo
**Esecutore:** C22
**Fonte analisi:** Rapporto completo analisi errori TouristIQ generato da C23

---

### 🧯 **PRIORITÀ ALTA – Eliminare metodi duplicati**

📌 **File:** `server/storage.ts`
📌 **Righe interessate:** \~52–57 e 93–98
📌 **Problema:** L’interfaccia `IStorage` contiene due volte gli stessi metodi (validazione IQCode), causando ambiguità e potenziali errori TypeScript.

✅ **Istruzioni:**

* Conserva **solo il primo blocco** di metodi, presumibilmente quello tra riga 52–57.
* Rimuovi il secondo blocco duplicato a riga 93–98.

---

### 🧯 **PRIORITÀ MEDIA – Migliorare tipizzazione**

📌 **File:** `server/storage.ts`
📌 **Righe segnalate:** 85–86, 101–110
📌 **Problema:** Presenza di `Promise<any>` in funzioni critiche.

✅ **Istruzioni:**

* Sostituisci `Promise<any>` con tipizzazioni reali prese da `shared/schema.ts`, come `InsertIqcodeValidation`, `IqCode`, ecc.
* Se necessario, crea tipi intermedi (`IValidationResult`, ecc.) per rendere l’output chiaro.

---

### 🧯 **PRIORITÀ BASSA – Verifica configurazione Vite**

📌 **File:** `vite.config.ts`
📌 **Riga segnalata:** 13–17
📌 **Problema:** Uso condizionale o dinamico di plugin `vite-plugin-cartographer` potrebbe non comportarsi come previsto in ambienti non-Replit.

✅ **Istruzioni:**

* Analizza eventuali `if (process.env.REPLIT)` o import dinamici.
* Se trovi fallback o condizioni, assicurati che la build funzioni anche **fuori da Replit**, per esempio su Vercel o Netlify.

---

### 🧱 **Controllo Architetturale – Cartella shared**

📌 **Problema:** Il frontend importa `@shared/schema` ma in alcuni ambienti questa alias potrebbe non essere risolta.

✅ **Istruzioni:**

* Verifica che `tsconfig.json` e `vite.config.ts` abbiano entrambe le alias `@` e `@shared` correttamente configurate.
* Se necessario, aggiungi fallback per ambienti senza supporto alle alias (es. build statiche).

---

## 📊 OUTPUT ATTESI DA C22

* File `server/storage.ts` aggiornato senza duplicati
* Tipi TypeScript corretti (no più `any`)
* Alias `@shared` funzionante su frontend
* Configurazione Vite testata per build di produzione
* Progetto pronto per essere marcato come **“robust production-ready”**

---

Fammi sapere se vuoi che C22 proceda con una **pull request automatica** o vuoi prima rivedere ogni singola modifica con me file per file.

Appena autorizzi, possiamo cominciare dal punto 1.
