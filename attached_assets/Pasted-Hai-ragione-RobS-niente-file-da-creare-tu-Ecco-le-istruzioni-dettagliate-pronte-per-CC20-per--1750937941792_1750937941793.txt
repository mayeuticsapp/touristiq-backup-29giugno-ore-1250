Hai ragione RobS, niente file da creare tu.
Ecco le **istruzioni dettagliate pronte per CC20** per **integrare il generatore IQcode nella dashboard admin** e renderlo subito funzionante e testabile da te.

---

## ✅ OBIETTIVO PER CC20

Implementare nella dashboard admin un pannello che consenta a RobS di:

* selezionare un Paese (es. Italia, Spagna…)
* generare un codice IQ emozionale unico (es. `TIQ-IT-LEONARDO`)
* visualizzare il codice generato e copiarlo
* vedere a chi è assegnato e la data di creazione

---

## 📦 FILE ESISTENTE

`iq-generator.ts` è già pronto e non va modificato.

---

## 🧩 STEP OPERATIVI PER CC20

### 🔹 1. Creare il file `createIQCode.ts`

Contenuto completo da incollare:
(usa Replit DB e previene duplicati)

```ts
import db from "@replit/database";
import { generateEmotionalIQCode, COUNTRY_EMOTIONAL_WORDS } from "./iq-generator";

export async function createIQCode(country: string, assignedTo = "") {
  const upperCountry = country.toUpperCase();

  if (!COUNTRY_EMOTIONAL_WORDS[upperCountry]) {
    throw new Error(`Paese ${country} non supportato`);
  }

  let attempts = 0;
  const maxAttempts = 50;

  while (attempts < maxAttempts) {
    const newCode = generateEmotionalIQCode(upperCountry);

    const exists = await db.get(`iqcode:${newCode}`);
    if (!exists) {
      const data = {
        code: newCode,
        country: upperCountry,
        assignedTo,
        createdAt: new Date().toISOString(),
        active: true
      };

      await db.set(`iqcode:${newCode}`, data);
      return data;
    }

    attempts++;
  }

  throw new Error("Non è stato possibile generare un codice unico. Ritenta.");
}
```

---

### 🔹 2. Creare una route API (se necessario)

Se usi API per interfacciare frontend/backend, crea endpoint tipo:

```ts
POST /api/genera-iqcode
body: { country: "IT", assignedTo: "Mario Bianchi" }
```

Handler suggerito:

```ts
import { createIQCode } from "@/lib/createIQCode";

export async function POST(req) {
  const { country, assignedTo } = await req.json();
  const result = await createIQCode(country, assignedTo);
  return Response.json(result);
}
```

---

### 🔹 3. Aggiungere il pannello nella Dashboard Admin

In una sezione tipo `Codici IQ`, inserire un componente React con:

* **dropdown** con i Paesi disponibili (`getAvailableCountries()` da `iq-generator.ts`)
* **input text** per “assegna a” (opzionale)
* **bottone “Genera Codice”**
* **area di risultato** che mostra:

  * codice generato (`TIQ-IT-LEONARDO`)
  * data
  * persona assegnata
  * pulsante copia

---

### 🔹 4. (Opzionale) Salvataggio nella lista dei codici generati (per consultazione futura)

Mostrare anche un elenco dei codici generati nell’ultima sessione:

```json
[
  { code: "TIQ-IT-COLOSSEO", assignedTo: "Mario Bianchi", date: "2025-06-26" },
  ...
]
```

---

## 🎯 RISULTATO ATTESO PER RobS

Dalla dashboard admin:

* seleziona “Italia”
* inserisce “Mario Bianchi”
* clicca su **Genera Codice**
* vede apparire: `TIQ-IT-RISOTTO` 🎉

---

### ✉️ RobS: quando CC20 ha fatto tutto, potrai:

* testare la generazione
* salvare il codice
* assegnarlo davvero a un turista reale

Vuoi che ti prepari anche un **mock grafico** del pannello admin così CC20 ha riferimento visivo?
