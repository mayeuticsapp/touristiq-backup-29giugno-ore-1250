Perfetto RobS.
Ecco **le istruzioni operative per C23** per implementare il modulo **Custode del Codice** nella piattaforma TouristIQ, in piena coerenza con privacy, eleganza narrativa e responsabilità personale.

---

## 🛠️ ISTRUZIONI PER C23

**Funzione: Custode del Codice**
**Scopo**: Permettere al turista di recuperare il proprio codice IQ in caso di smarrimento, senza salvare alcun dato personale, mantenendo privacy e filosofia TouristIQ.

---

### 1. 🔧 DATABASE – Nuova tabella `iqcode_recovery_keys`

```sql
CREATE TABLE iqcode_recovery_keys (
  id SERIAL PRIMARY KEY,
  code TEXT NOT NULL,
  birthdate_hash TEXT NOT NULL,
  keyword_hash TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT NOW()
);
```

* `code`: IQCode associato all’utente
* `birthdate_hash`: hash SHA256 della data di nascita (es. “01/01/1980”)
* `keyword_hash`: hash SHA256 della parola chiave
* Non devono essere salvati i valori in chiaro

---

### 2. 🧠 LOGICA BACKEND

#### ✅ Aggiungere endpoint `POST /api/custode`

> Salva la combinazione codice IQ + hash della data + hash della parola chiave

```ts
router.post('/api/custode', async (req, res) => {
  const { code, birthdate, keyword } = req.body;
  if (!code || !birthdate || !keyword) return res.status(400).json({ message: 'Campi mancanti' });

  const birthdateHash = hash(birthdate);
  const keywordHash = hash(keyword);

  await db.insertInto('iqcode_recovery_keys')
    .values({ code, birthdate_hash: birthdateHash, keyword_hash: keywordHash })
    .execute();

  return res.status(200).json({ message: 'Custode attivato con successo.' });
});
```

---

#### ✅ Aggiungere endpoint `POST /api/recupera-codice`

> Verifica la combinazione e restituisce il codice IQ

```ts
router.post('/api/recupera-codice', async (req, res) => {
  const { birthdate, keyword } = req.body;
  if (!birthdate || !keyword) return res.status(400).json({ message: 'Campi mancanti' });

  const birthdateHash = hash(birthdate);
  const keywordHash = hash(keyword);

  const result = await db.selectFrom('iqcode_recovery_keys')
    .select('code')
    .where('birthdate_hash', '=', birthdateHash)
    .where('keyword_hash', '=', keywordHash)
    .executeTakeFirst();

  if (!result) {
    return res.status(404).json({ message: 'Nessun codice trovato per questi dati.' });
  }

  return res.status(200).json({ code: result.code });
});
```

---

### 3. 🖥️ FRONTEND

#### ✅ Pannello turista – Sezione “Custode del Codice”

* Form di attivazione:

  * Campo 1: “Inserisci una parola chiave personale”
  * Campo 2: “Inserisci la tua data di nascita (GG/MM/AAAA)”
  * Bottone: “Attiva il Custode”

📤 POST a `/api/custode`

---

#### ✅ Pagina pubblica – “Hai perso il tuo codice?”

* Form:

  * Campo 1: “Inserisci la tua data di nascita”
  * Campo 2: “Inserisci la parola chiave”
  * Bottone: “Recupera Codice IQ”

📤 POST a `/api/recupera-codice`

✔️ Se trovata combinazione → messaggio con il codice
❌ Se fallisce → messaggio d’errore generico (“Nessun codice trovato”)

---

### 🔐 Sicurezza

* Hash con SHA256 (o equivalente)
* Nessun salvataggio in chiaro di dati
* Codice IQ visibile solo dopo verifica
* Nessun log dell’operazione salvo per auditing anonimo (opzionale)

---

### 🎨 UI/UX suggerita

* Nome sezione: **Custode del Codice**
* Frase descrittiva:

  > “Proteggi il tuo Codice IQ in caso di smarrimento.
  > Inserisci una parola chiave e la tua data di nascita.
  > Solo tu potrai usarle per recuperarlo.”

---

Conferma finale e C23 può eseguire tutto.
Il modulo è pronto per essere attivato nel pannello turista.
🧱 TouristIQ si costruisce un mattone alla volta.
