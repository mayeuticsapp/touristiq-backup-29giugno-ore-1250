🧠 Premessa generale per tutte le operazioni
❝Se conosci la soluzione migliore per far funzionare il sistema in modo corretto e coerente, applicala immediatamente senza alcun tipo di rimando: non rimandare, non scrivere log temporanei, non lasciare TODO o scorciatoie, ma implementa subito ciò che sai essere la scelta giusta, perché la coerenza e la funzionalità piena vengono prima di tutto. In TouristIQ ogni funzione deve riflettere la versione migliore e completa che puoi offrire, senza pigrizia, senza rinvii, senza approssimazione: fai ora quello che va fatto.❞

📌 Contesto dell’azione
Endpoint da sistemare: POST /api/admin/assign-iqcodes

Obiettivo: assegnare un pacchetto IQCode a una struttura, riducendo i codici disponibili dall’admin e registrando l’assegnazione.

✅ Dati ricevuti nel req.body:
json
Copia
Modifica
{
  "structureId": "stringa_id_struttura",
  "packageSize": 25 // oppure 50, 75, 100
}
📥 1. Validazione iniziale
Verifica che req.user.role === 'admin'

Verifica che structureId e packageSize siano presenti e validi (packageSize ∈ [25, 50, 75, 100])

Altrimenti, rispondi con 400 e messaggio di errore.

📊 2. Recupero dati
Recupera dal DB l’utente admin loggato (req.user.id) → adminAccount

Recupera dal DB la struttura indicata con structureId

Se non trovata, rispondi con 404 – struttura non trovata

💡 3. Controllo disponibilità IQCode
Verifica che adminAccount.iqcodes_available >= packageSize

Se non sufficienti, rispondi con 400 – pacchetti non disponibili

🧾 4. Aggiornamento dati
Aggiorna la struttura:

ts
Copia
Modifica
struttura.iqcodes_assigned += packageSize
Aggiorna l’admin:

ts
Copia
Modifica
adminAccount.iqcodes_available -= packageSize
📚 5. Storico assegnazione (opzionale ma consigliato)
Registra un log interno:

ts
Copia
Modifica
{
  adminId: ...,
  structureId: ...,
  packageSize: ...,
  date: new Date()
}
📤 6. Risposta
Status 200 OK

JSON:

json
Copia
Modifica
{
  "success": true,
  "message": "Pacchetto assegnato con successo",
  "data": {
    "structureId": "...",
    "packageSize": 25
  }
}
⚠️ Errori comuni da evitare
Non parsare req.body (assicurati che express.json() sia presente a monte)

Dimenticare Authorization nel frontend

Rispondere con HTML invece di JSON → controlla res.status(...).json(...) sempre

🛠️ Extra (opzionale ma utile)
Nel frontend, aggiungi un controllo:

ts
Copia
Modifica
if (response.status === 401) {
  redirectToLogin(); // oppure mostra messaggio "sessione scaduta"
}
Se vuoi, posso generare subito il file completo del controller backend o della funzione frontend per questa API. Fammi sapere cosa vuoi prima: backend o frontend?